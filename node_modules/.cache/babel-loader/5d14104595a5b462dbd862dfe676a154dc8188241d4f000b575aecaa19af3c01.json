{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Portifolio\\\\CineTag\\\\src\\\\pages\\\\Player\\\\index.js\",\n  _s = $RefreshSig$();\nimport Banner from 'components/Banner';\nimport styles from './Player.module.css';\nimport Titulo from 'components/Titulo';\nimport { useParams } from 'react-router-dom';\nimport NaoEncontrada from 'pages/NaoEncontrada';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Player() {\n  _s();\n  const [video, setVideo] = useState();\n  const parametros = useParams();\n  //puxando os id's do server json\n  useEffect(() => {\n    fetch(`https://my-json-server.typicode.com/GabrielOliRod/CineTag-API/videos?id=${parametros.id}`).then(resposta => resposta.json()).then(dados => {\n      setVideo(...dados);\n    });\n  });\n  if (!video) {\n    return /*#__PURE__*/_jsxDEV(NaoEncontrada, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      imagem: \"player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Titulo, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        //trazendo o vídeo com o iframe\n        width: \"100%\",\n        src: video.link,\n        title: video.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"R0A9wEGpbjvI51h/7AKLkb90syQ=\", false, function () {\n  return [useParams];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["Banner","styles","Titulo","useParams","NaoEncontrada","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","_s","video","setVideo","parametros","fetch","id","then","resposta","json","dados","fileName","_jsxFileName","lineNumber","columnNumber","children","imagem","className","container","width","src","link","title","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Desktop/Portifolio/CineTag/src/pages/Player/index.js"],"sourcesContent":["import Banner from 'components/Banner'\r\nimport styles from './Player.module.css'\r\nimport Titulo from 'components/Titulo'\r\nimport { useParams } from 'react-router-dom'\r\nimport NaoEncontrada from 'pages/NaoEncontrada'\r\nimport { useEffect, useState } from 'react'\r\n\r\nfunction Player() {\r\n    const [video, setVideo] = useState()\r\n    const parametros = useParams()\r\n    //puxando os id's do server json\r\n    useEffect(() => {\r\n        fetch(`https://my-json-server.typicode.com/GabrielOliRod/CineTag-API/videos?id=${parametros.id}`)\r\n            .then(resposta => resposta.json())\r\n            .then(dados => {\r\n                setVideo(...dados)\r\n            })\r\n    })\r\n\r\n    if (!video) {\r\n        return <NaoEncontrada />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Banner imagem=\"player\" />\r\n            <Titulo>\r\n                <h1>Player</h1>\r\n            </Titulo>\r\n            <section className={styles.container}>\r\n                <iframe //trazendo o vídeo com o iframe\r\n                    width=\"100%\"\r\n                    src={video.link}\r\n                    title={video.id}\r\n                />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Player\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACpC,MAAMS,UAAU,GAAGZ,SAAS,CAAC,CAAC;EAC9B;EACAE,SAAS,CAAC,MAAM;IACZW,KAAK,CAAE,2EAA0ED,UAAU,CAACE,EAAG,EAAC,CAAC,CAC5FC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,KAAK,IAAI;MACXP,QAAQ,CAAC,GAAGO,KAAK,CAAC;IACtB,CAAC,CAAC;EACV,CAAC,CAAC;EAEF,IAAI,CAACR,KAAK,EAAE;IACR,oBAAOL,OAAA,CAACJ,aAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,oBACIjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA,CAACR,MAAM;MAAC2B,MAAM,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BjB,OAAA,CAACN,MAAM;MAAAwB,QAAA,eACHlB,OAAA;QAAAkB,QAAA,EAAI;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACTjB,OAAA;MAASoB,SAAS,EAAE3B,MAAM,CAAC4B,SAAU;MAAAH,QAAA,eACjClB,OAAA;QAAQ;QACJsB,KAAK,EAAC,MAAM;QACZC,GAAG,EAAElB,KAAK,CAACmB,IAAK;QAChBC,KAAK,EAAEpB,KAAK,CAACI;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACZ,CAAC;AAEX;AAACb,EAAA,CA/BQD,MAAM;EAAA,QAEQR,SAAS;AAAA;AAAA+B,EAAA,GAFvBvB,MAAM;AAiCf,eAAeA,MAAM;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}